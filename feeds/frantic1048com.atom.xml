<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Felix's Blog</title><link href="/" rel="alternate"></link><link href="/feeds/frantic1048com.atom.xml" rel="self"></link><id>/</id><updated>2014-07-13T17:15:00+08:00</updated><entry><title>如何为Pelican制作主题（转）</title><link href="/pelican-theme.html" rel="alternate"></link><updated>2014-07-13T17:15:00+08:00</updated><author><name>frantic1048.com</name></author><id>tag:,2014-07-13:pelican-theme.html</id><summary type="html">&lt;p&gt;本文转自:&lt;a href="http://frantic1048.com/fan-yi-ru-he-wei-pelicanzhi-zuo-zhu-ti-wu-xian-xiu-ding-zhong.html"&gt;http://frantic1048.com/fan-yi-ru-he-wei-pelicanzhi-zuo-zhu-ti-wu-xian-xiu-ding-zhong.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;如何为Pelican制作主题&lt;/h2&gt;
&lt;p&gt;Pelican使用著名的 Jinja2 模板引擎来生成它的HTML输出。Jinja2的语法非常简单。如果你想要制作你自己的主题，随意看看 “simple”主题 或许能给你一些灵感。&lt;/p&gt;
&lt;h3&gt;主题的结构&lt;/h3&gt;
&lt;p&gt;制作主题时，你必须遵守下列结构&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;├────&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;css&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt;
&lt;span class="err"&gt;└────&lt;/span&gt; &lt;span class="n"&gt;templates&lt;/span&gt;
    &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;archives&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="c1"&gt;// 用来显示文章存档&lt;/span&gt;
    &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;period_archives&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;  &lt;span class="c1"&gt;//用来显示根据时间段划分的文章存档&lt;/span&gt;
    &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;  &lt;span class="c1"&gt;// 用来处理每篇文章的页面&lt;/span&gt;
    &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;   &lt;span class="c1"&gt;// 用来处理各个作者的页面&lt;/span&gt;
    &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;authors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;  &lt;span class="c1"&gt;// 必须列出所有作者&lt;/span&gt;
    &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;   &lt;span class="c1"&gt;// 必须列出所有目录&lt;/span&gt;
    &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="c1"&gt;// 用来处理各个目录&lt;/span&gt;
    &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="c1"&gt;// Index页面，列出所有文章&lt;/span&gt;
    &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="c1"&gt;// 用来处理每个page&lt;/span&gt;
    &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;  &lt;span class="c1"&gt;// 用来处理每个标签&lt;/span&gt;
    &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="c1"&gt;// 必须列出所有标签，可以是标签云&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;_static_包含了所有的静态文件，最后会被复制到输出中的_theme_目录下。我把CSS和image目录放在了这里，不过这只是举例，把你需要的东西放在这里。&lt;/li&gt;
&lt;li&gt;templates 包含了所有被用来生成页面的模板。我只在这里存放了必需的模板，你可以自己定义对你来说有用的模板。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;模板与变量&lt;/h3&gt;
&lt;p&gt;我们的想法是使用可以嵌入进HTML的简单语法。这个文件描述了哪些模板存在于主题中，哪些变量将会在生成时被传递给每个模板。&lt;/p&gt;
&lt;p&gt;所有的模板都会接收到你在设置文件中定义的全部大写的变量。你可以直接访问这些变量。&lt;/p&gt;
&lt;h4&gt;公共变量&lt;/h4&gt;
&lt;p&gt;这些设置对所有模板都有效。&lt;/p&gt;
&lt;table border="1" bordercolor="#a0c6e5" style="border-collapse:collapse;width:90%;"&gt;
    &lt;tr&gt;
        &lt;td style="width:30%"&gt;变量&lt;/td&gt;
        &lt;td style="width:70%"&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;output_file&lt;/td&gt;
        &lt;td&gt;正在生成的文件的名字。举个例子，Pelican渲染主页的时候，output_file将会是“index.html”.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;articles&lt;/td&gt;
        &lt;td&gt;文章列表，依日期降序排列所有类型为Aritcle对象的元素，你可以访问它们的属性（比如标题，概要，作者…）。有时会被屏蔽（例如在tags页面中）。你可以在变量all_articles 中找到关于它的信息。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;dates&lt;/td&gt;
        &lt;td&gt;同样是文章列表，不过是依日期升序排列。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;tags&lt;/td&gt;
        &lt;td&gt;一个包含数个(tag,articles)元组的列表。包含了所有的标签和使用特定标签的所有文章的列表构成的元组。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;categories&lt;/td&gt;
        &lt;td&gt;一个包含数个(category,articles)元组的列表。包含了所有分类和在特定分类下所有文章的列表构成的元组。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;pages&lt;/td&gt;
        &lt;td&gt;pages的列表&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;h4&gt;排序&lt;/h4&gt;
&lt;p&gt;URL wrappers (currently categories, tags, and authors), have comparison methods that allow them to be easily sorted by name:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;articles&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果你想依照其它标准进行排序, Jinja 的 sort 命令 拥有很多选项。&lt;/p&gt;
&lt;h4&gt;日期格式化&lt;/h4&gt;
&lt;p&gt;Pelican依据你的设置和区域(&lt;code&gt;DATE_FORMATS/DEFAULT_DATE_FORMAT&lt;/code&gt;)来提供一个&lt;code&gt;locale_date&lt;/code&gt;属性。另一方面，&lt;code&gt;date&lt;/code&gt;属性蒋成为一个&lt;code&gt;datetime&lt;/code&gt;对象。如果你需要与当前设置不同的日期格式，使用Pelican自带的Jinja过滤器&lt;code&gt;strftime&lt;/code&gt;，用法和Python中的 &lt;code&gt;strftime&lt;/code&gt; 是一样的，过滤器会正确地根据你设置的区域正确地对日期进行格式化。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;index.html&lt;/p&gt;
&lt;p&gt;这是博客的主页，生成到 output/index.html 。&lt;/p&gt;
&lt;p&gt;如果启用了分页，后续的页面会被保存在 output/index&lt;code&gt;n&lt;/code&gt;.html 。&lt;/p&gt;
&lt;table border="1" bordercolor="#a0c6e5" style="border-collapse:collapse;width:90%;"&gt;
    &lt;tr&gt;
        &lt;td style="width:30%"&gt;变量&lt;/td&gt;
        &lt;td style="width:70%"&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;articles_paginator&lt;/td&gt;
        &lt;td&gt;一个用来处理文章列表的paginator对象&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;articles_page&lt;/td&gt;
        &lt;td&gt;文章列表的当前页面&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;dates_paginator&lt;/td&gt;
        &lt;td&gt;一个用来处理文章的paginator对象，依照日期升序进行排序&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;dates_page&lt;/td&gt;
        &lt;td&gt;文章列表的当前页面，依照日期升序排列&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;page_name&lt;/td&gt;
        &lt;td&gt;“索引” - 很有用的分页链接&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;author.html&lt;/p&gt;
&lt;p&gt;这个模板将用来处理每个作者的页面，输出为output/author/author_name.html。&lt;/p&gt;
&lt;table border="1" bordercolor="#a0c6e5" style="border-collapse:collapse;width:90%;"&gt;
    &lt;tr&gt;
        &lt;td style="width:30%"&gt;变量&lt;/td&gt;
        &lt;td style="width:70%"&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;author&lt;/td&gt;
        &lt;td&gt;作者名&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;articles&lt;/td&gt;
        &lt;td&gt;该作者的文章&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;dates&lt;/td&gt;
        &lt;td&gt;该作者的文章，依日期升序排序&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;articles_paginator&lt;/td&gt;
        &lt;td&gt;一个用于文章列表的paginator对象&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;articles_page&lt;/td&gt;
        &lt;td&gt;文章的当前页&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;dates_paginator&lt;/td&gt;
        &lt;td&gt;一个用于文章列表的paginator对象，依日期升序排序&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;dates_page&lt;/td&gt;
        &lt;td&gt;文章的当前页，依日期升序排序&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;page_name&lt;/td&gt;
        &lt;td&gt;AUTHOR_URL：在{slug}后面的一切都被去掉了 - 对分页链接很有用&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;category.html&lt;/p&gt;
&lt;p&gt;这个模板会用来处理每个分类，输出为output/category/category_name.html。&lt;/p&gt;
&lt;p&gt;如果启用了分页，后续的页面将依照CATEGORY_SAVE_AS(默认值: output/category/category_name&lt;code&gt;n&lt;/code&gt;.html)输出。&lt;/p&gt;
&lt;table border="1" bordercolor="#a0c6e5" style="border-collapse:collapse;width:90%;"&gt;
    &lt;tr&gt;
        &lt;td style="width:30%"&gt;变量&lt;/td&gt;
        &lt;td style="width:70%"&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;author&lt;/td&gt;
        &lt;td&gt;作者名&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;articles&lt;/td&gt;
        &lt;td&gt;该作者的文章&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;dates&lt;/td&gt;
        &lt;td&gt;该作者的文章，依日期升序排序&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;articles_paginator&lt;/td&gt;
        &lt;td&gt;一个用于文章列表的paginator对象&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;articles_page&lt;/td&gt;
        &lt;td&gt;文章的当前页&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;dates_paginator&lt;/td&gt;
        &lt;td&gt;一个用于文章列表的paginator对象，依日期升序排序&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;dates_page&lt;/td&gt;
        &lt;td&gt;文章的当前页，依日期升序排序&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;page_name&lt;/td&gt;
        &lt;td&gt;CATEGORY\_URL:在{slug}后面的一切都被去掉了 - 对分页链接很有用&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;article.html&lt;/p&gt;
&lt;p&gt;这个模板用来处理每篇文章，输出为output/article_name.html。这里是它特有的变量。&lt;/p&gt;
&lt;table border="1" bordercolor="#a0c6e5" style="border-collapse:collapse;width:90%;"&gt;
    &lt;tr&gt;
        &lt;td style="width:30%"&gt;变量&lt;/td&gt;
        &lt;td style="width:70%"&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;article&lt;/td&gt;
        &lt;td&gt;要被显示的article对象&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;category&lt;/td&gt;
        &lt;td&gt;当前文章所属分类的名称&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;page.html&lt;/p&gt;
&lt;p&gt;这个模板用来处理每个page页面，相应输出为output/page_name.html。&lt;/p&gt;
&lt;table border="1" bordercolor="#a0c6e5" style="border-collapse:collapse;width:90%;"&gt;
    &lt;tr&gt;
        &lt;td style="width:30%"&gt;变量&lt;/td&gt;
        &lt;td style="width:70%"&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;page&lt;/td&gt;
        &lt;td&gt;要显示的page对象，你可以访问它的标题，slug和内容&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;tag.html&lt;/p&gt;
&lt;p&gt;这个模板用来处理各个标签，相应的输出为output/tag/tag_name.html。&lt;/p&gt;
&lt;p&gt;如果启用了分页，后续的页面将依照TAG_SAVE_AS(默认值: output/tag/tag_name&lt;code&gt;n&lt;/code&gt;.html)输出。&lt;/p&gt;
&lt;table border="1" bordercolor="#a0c6e5" style="border-collapse:collapse;width:90%;"&gt;
    &lt;tr&gt;
        &lt;td style="width:30%"&gt;变量&lt;/td&gt;
        &lt;td style="width:70%"&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;tag&lt;/td&gt;
        &lt;td&gt;标签名&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;articles&lt;/td&gt;
        &lt;td&gt;与该标签相关的文章&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;dates&lt;/td&gt;
        &lt;td&gt;与该标签相关的文章，依照日期升序排序&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;articles_paginator&lt;/td&gt;
        &lt;td&gt;一个文章列表的paginator对象&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;articles_page&lt;/td&gt;
        &lt;td&gt;文章当前所在页&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;dates_paginator&lt;/td&gt;
        &lt;td&gt;一个文章列表的paginator对象，依照日期升序排序&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;dates_page&lt;/td&gt;
        &lt;td&gt;文章当前所在页，依照日期升序排序&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;page_name&lt;/td&gt;
        &lt;td&gt;TAG_URL：在{slug}后面的一切都被去掉了 - 对分页链接很有用&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;h3&gt;Feeds&lt;/h3&gt;
&lt;p&gt;feed变量在3.0版本(译者注：指Pelican，下同)中有所改变，现在每个变量在名字中显式列出是ATOM还是RSS。ATOM依然是默认的。旧主题可能因此需要更新。下面是所有的feed变量&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FEED_ATOM&lt;/li&gt;
&lt;li&gt;FEED_RSS&lt;/li&gt;
&lt;li&gt;FEED_ALL_ATOM&lt;/li&gt;
&lt;li&gt;FEED_ALL_RSS&lt;/li&gt;
&lt;li&gt;CATEGORY_FEED_ATOM&lt;/li&gt;
&lt;li&gt;CATEGORY_FEED_RSS&lt;/li&gt;
&lt;li&gt;TAG_FEED_ATOM&lt;/li&gt;
&lt;li&gt;TAG_FEED_RSS&lt;/li&gt;
&lt;li&gt;TRANSLATION_FEED_ATOM&lt;/li&gt;
&lt;li&gt;TRANSLATION_FEED_RSS&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;继承&lt;/h3&gt;
&lt;p&gt;自从3.0版本开始，Pelican支持继承&lt;code&gt;simlpe&lt;/code&gt;主题，你可以在你的主题里面重用simple主题中的模板。&lt;/p&gt;
&lt;p&gt;如果你的&lt;code&gt;templates/&lt;/code&gt;目录下的某个__必需模板__丢失了，它将被simple主题中的对应模板替代。因此，如果&lt;code&gt;simple&lt;/code&gt;主题中的模板的HTML结构是适合你的，你就不需要从头写一个全新的模板。&lt;/p&gt;
&lt;p&gt;你也可以在你的主题中对&lt;code&gt;simple&lt;/code&gt;主题的模板进行扩展，像下面这个例子中一样使用&lt;code&gt;{% extends %}&lt;/code&gt;来实现。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;!simple/index.html&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;   &amp;lt;!-- extends the ``index.html`` template from the ``simple`` theme --&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;index.html&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;   &amp;lt;!-- &amp;quot;regular&amp;quot; extending --&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;例子&lt;/h4&gt;
&lt;p&gt;通过这个机制，你可以仅仅用两个文件来创建一个主题。&lt;/p&gt;
&lt;p&gt;base.html&lt;/p&gt;
&lt;p&gt;第一个文件是&lt;code&gt;templates/base.html&lt;/code&gt;模板：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;!simple/base.html&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;head&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;   &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;SITEURL&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;/theme/css/style.css&amp;quot; /&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;在第一行，我们扩展了simple主题中的base.html，所以我们不需要重写整个文件。&lt;/li&gt;
&lt;li&gt;第三行，我们开始了在simple主题中定义好的 head 块。&lt;/li&gt;
&lt;li&gt;第四行，super() 函数保持先前插入的head 块不结束。&lt;/li&gt;
&lt;li&gt;第五行，我们为页面添加了一个样式表。&lt;/li&gt;
&lt;li&gt;最后一行，我们结束了head 块。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个文件将被所有其它的模板（译者注：tags.html，articles.html…）扩展，所以样式表会被连接到所有页面中。&lt;/p&gt;
&lt;p&gt;style.css&lt;/p&gt;
&lt;p&gt;第二个文件就是static/css/style.cssCSS样式表：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;family&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;monospace&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;white&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="n"&gt;px&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="n"&gt;px&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;padding&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;em&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;margin&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;border&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;thin&lt;/span&gt; &lt;span class="n"&gt;solid&lt;/span&gt; &lt;span class="n"&gt;gray&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;px&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;display&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nl"&gt;a:&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;blue&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;decoration&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;none&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nl"&gt;a:&lt;/span&gt;&lt;span class="n"&gt;hover&lt;/span&gt;   &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;blue&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;decoration&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;underline&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nl"&gt;a:&lt;/span&gt;&lt;span class="n"&gt;visited&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;blue&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;                               &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;h1&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inherit&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;important&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;h2&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inherit&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;important&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;h3&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inherit&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;important&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;h4&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inherit&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;important&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;h5&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inherit&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;important&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;h6&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inherit&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;important&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;pre&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;margin&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;em&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;em&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;em&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;em&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cp"&gt;#menu li {&lt;/span&gt;
    &lt;span class="n"&gt;display&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;inline&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cp"&gt;#post-list {&lt;/span&gt;
    &lt;span class="n"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bottom&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;em&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;em&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;下载&lt;/h4&gt;
&lt;p&gt;你可以从&lt;a href="http://docs.getpelican.com/en/latest/_downloads/theme-basic.zip"&gt;这里&lt;/a&gt;下载这个样例主题&lt;/p&gt;
&lt;h4&gt;源文档&lt;/h4&gt;
&lt;p&gt;原文链接：&lt;a href="http://docs.getpelican.com/en/latest/themes.html"&gt;http://docs.getpelican.com/en/latest/themes.html&lt;/a&gt;&lt;/p&gt;</summary><category term="github pages"></category><category term="pelican"></category><category term="python"></category></entry></feed>